{
  "version": 3,
  "sources": ["../../vuetify/src/components/VCarousel/VCarousel.tsx", "../../vuetify/src/components/VCarousel/VCarouselItem.tsx"],
  "sourcesContent": ["// Styles\nimport './VCarousel.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VProgressLinear } from '@/components/VProgressLinear'\nimport { makeVWindowProps, VWindow } from '@/components/VWindow/VWindow'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { onMounted, ref, watch } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VWindowSlots } from '@/components/VWindow/VWindow'\nimport type { GroupProvide } from '@/composables/group'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCarouselProps = propsFactory({\n  color: String,\n  cycle: Boolean,\n  delimiterIcon: {\n    type: IconValue,\n    default: '$delimiter',\n  },\n  height: {\n    type: [Number, String],\n    default: 500,\n  },\n  hideDelimiters: Boolean,\n  hideDelimiterBackground: Boolean,\n  interval: {\n    type: [Number, String],\n    default: 6000,\n    validator: (value: string | number) => Number(value) > 0,\n  },\n  progress: [Boolean, String],\n  verticalDelimiters: [Boolean, String] as PropType<boolean | 'left' | 'right'>,\n\n  ...makeVWindowProps({\n    continuous: true,\n    mandatory: 'force' as const,\n    showArrows: true,\n  }),\n}, 'VCarousel')\n\ntype VCarouselSlots = VWindowSlots & {\n  item: {\n    props: Record<string, any>\n    item: {\n      id: number\n      value: unknown\n      disabled: boolean | undefined\n    }\n  }\n}\n\nexport const VCarousel = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VCarouselSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCarousel',\n\n  props: makeVCarouselProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { t } = useLocale()\n    const windowRef = ref<VWindow>()\n\n    let slideTimeout = -1\n    watch(model, restartTimeout)\n    watch(() => props.interval, restartTimeout)\n    watch(() => props.cycle, val => {\n      if (val) restartTimeout()\n      else window.clearTimeout(slideTimeout)\n    })\n\n    onMounted(startTimeout)\n\n    function startTimeout () {\n      if (!props.cycle || !windowRef.value) return\n\n      slideTimeout = window.setTimeout(windowRef.value.group.next, +props.interval > 0 ? +props.interval : 6000)\n    }\n\n    function restartTimeout () {\n      window.clearTimeout(slideTimeout)\n      window.requestAnimationFrame(startTimeout)\n    }\n\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props)\n\n      return (\n        <VWindow\n          ref={ windowRef }\n          { ...windowProps }\n          v-model={ model.value }\n          class={[\n            'v-carousel',\n            {\n              'v-carousel--hide-delimiter-background': props.hideDelimiterBackground,\n              'v-carousel--vertical-delimiters': props.verticalDelimiters,\n            },\n            props.class,\n          ]}\n          style={[\n            { height: convertToUnit(props.height) },\n            props.style,\n          ]}\n        >\n          {{\n            default: slots.default,\n            additional: ({ group }: { group: GroupProvide }) => (\n              <>\n                { !props.hideDelimiters && (\n                  <div\n                    class=\"v-carousel__controls\"\n                    style={{\n                      left: props.verticalDelimiters === 'left' && props.verticalDelimiters ? 0 : 'auto',\n                      right: props.verticalDelimiters === 'right' ? 0 : 'auto',\n                    }}\n                  >\n                    { group.items.value.length > 0 && (\n                      <VDefaultsProvider\n                        defaults={{\n                          VBtn: {\n                            color: props.color,\n                            icon: props.delimiterIcon,\n                            size: 'x-small',\n                            variant: 'text',\n                          },\n                        }}\n                        scoped\n                      >\n                        { group.items.value.map((item, index) => {\n                          const props = {\n                            id: `carousel-item-${item.id}`,\n                            'aria-label': t('$vuetify.carousel.ariaLabel.delimiter', index + 1, group.items.value.length),\n                            class: [\n                              'v-carousel__controls__item',\n                              group.isSelected(item.id) && 'v-btn--active',\n                            ],\n                            onClick: () => group.select(item.id, true),\n                          }\n\n                          return slots.item\n                            ? slots.item({ props, item })\n                            : (<VBtn { ...item } { ...props } />)\n                        })}\n                      </VDefaultsProvider>\n                    )}\n                  </div>\n                )}\n\n                { props.progress && (\n                  <VProgressLinear\n                    class=\"v-carousel__progress\"\n                    color={ typeof props.progress === 'string' ? props.progress : undefined }\n                    modelValue={ (group.getItemIndex(model.value) + 1) / group.items.value.length * 100 }\n                  />\n                )}\n              </>\n            ),\n            prev: slots.prev,\n            next: slots.next,\n          }}\n        </VWindow>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCarousel = InstanceType<typeof VCarousel>\n", "// Components\nimport { makeVImgProps, VImg } from '@/components/VImg/VImg'\nimport { makeVWindowItemProps, VWindowItem } from '@/components/VWindow/VWindowItem'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VImgSlots } from '@/components/VImg/VImg'\n\nexport const makeVCarouselItemProps = propsFactory({\n  ...makeVImgProps(),\n  ...makeVWindowItemProps(),\n}, 'VCarouselItem')\n\nexport const VCarouselItem = genericComponent<VImgSlots>()({\n  name: 'VCarouselItem',\n\n  inheritAttrs: false,\n\n  props: makeVCarouselItemProps(),\n\n  setup (props, { slots, attrs }) {\n    useRender(() => {\n      const imgProps = VImg.filterProps(props)\n      const windowItemProps = VWindowItem.filterProps(props)\n\n      return (\n        <VWindowItem\n          class=\"v-carousel-item\"\n          { ...windowItemProps }\n        >\n          <VImg\n            { ...attrs }\n            { ...imgProps }\n            v-slots={ slots }\n          />\n        </VWindowItem>\n      )\n    })\n  },\n})\n\nexport type VCarouselItem = InstanceType<typeof VCarouselItem>\n"],
  "mappings": "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",
  "names": ["makeVCarouselProps", "propsFactory", "color", "String", "cycle", "Boolean", "delimiterIcon", "type", "IconValue", "default", "height", "Number", "hideDelimiters", "hideDelimiterBackground", "interval", "validator", "value", "progress", "verticalDelimiters", "makeVWindowProps", "continuous", "mandatory", "showArrows", "VCarousel", "genericComponent", "name", "props", "emits", "setup", "_ref", "slots", "model", "useProxiedModel", "t", "useLocale", "windowRef", "ref", "slideTimeout", "watch", "restartTimeout", "val", "window", "clearTimeout", "onMounted", "startTimeout", "setTimeout", "group", "next", "requestAnimationFrame", "useRender", "windowProps", "VWindow", "filterProps", "_createVNode", "_mergeProps", "$event", "class", "convertToUnit", "style", "additional", "_ref2", "_Fragment", "left", "right", "items", "length", "VDefaultsProvider", "VBtn", "icon", "size", "variant", "map", "item", "index", "id", "isSelected", "onClick", "select", "VProgressLinear", "undefined", "getItemIndex", "prev", "makeVCarouselItemProps", "propsFactory", "makeVImgProps", "makeVWindowItemProps", "VCarouselItem", "genericComponent", "name", "inheritAttrs", "props", "setup", "_ref", "slots", "attrs", "useRender", "imgProps", "VImg", "filterProps", "windowItemProps", "VWindowItem", "_createVNode", "_mergeProps", "default"]
}
