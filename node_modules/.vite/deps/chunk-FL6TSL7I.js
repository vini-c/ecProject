import {
  makeVariantProps
} from "./chunk-74OKH6YK.js";
import {
  makeGroupProps,
  useGroup
} from "./chunk-VEQ3WX4M.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-LYYCJ7RZ.js";
import {
  makeTagProps
} from "./chunk-2FTY5EI2.js";
import {
  deepEqual,
  genericComponent,
  makeComponentProps,
  propsFactory,
  provideDefaults,
  useRender
} from "./chunk-WHYBA6IG.js";
import {
  createVNode,
  toRef
} from "./chunk-6CG2VZJB.js";

// node_modules/vuetify/lib/components/VChipGroup/VChipGroup.mjs
import "/Users/vinicius.rocha/Documents/GitHub/ecProject/node_modules/vuetify/lib/components/VChipGroup/VChipGroup.css";
var VChipGroupSymbol = Symbol.for("vuetify:v-chip-group");
var makeVChipGroupProps = propsFactory({
  column: Boolean,
  filter: Boolean,
  valueComparator: {
    type: Function,
    default: deepEqual
  },
  ...makeComponentProps(),
  ...makeGroupProps({
    selectedClass: "v-chip--selected"
  }),
  ...makeTagProps(),
  ...makeThemeProps(),
  ...makeVariantProps({
    variant: "tonal"
  })
}, "VChipGroup");
var VChipGroup = genericComponent()({
  name: "VChipGroup",
  props: makeVChipGroupProps(),
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      themeClasses
    } = provideTheme(props);
    const {
      isSelected,
      select,
      next,
      prev,
      selected
    } = useGroup(props, VChipGroupSymbol);
    provideDefaults({
      VChip: {
        color: toRef(props, "color"),
        disabled: toRef(props, "disabled"),
        filter: toRef(props, "filter"),
        variant: toRef(props, "variant")
      }
    });
    useRender(() => createVNode(props.tag, {
      "class": ["v-chip-group", {
        "v-chip-group--column": props.column
      }, themeClasses.value, props.class],
      "style": props.style
    }, {
      default: () => {
        var _a;
        return [(_a = slots.default) == null ? void 0 : _a.call(slots, {
          isSelected,
          select,
          next,
          prev,
          selected: selected.value
        })];
      }
    }));
    return {};
  }
});

export {
  VChipGroupSymbol,
  VChipGroup
};
//# sourceMappingURL=chunk-FL6TSL7I.js.map
