import {
  VBtnGroup,
  makeVBtnGroupProps
} from "./chunk-ZGHNRI5U.js";
import {
  makeGroupProps,
  useGroup
} from "./chunk-VEQ3WX4M.js";
import {
  genericComponent,
  propsFactory,
  useRender
} from "./chunk-WHYBA6IG.js";
import {
  createVNode,
  mergeProps
} from "./chunk-6CG2VZJB.js";

// node_modules/vuetify/lib/components/VBtnToggle/VBtnToggle.mjs
import "/Users/vinicius.rocha/Documents/GitHub/ecProject/node_modules/vuetify/lib/components/VBtnToggle/VBtnToggle.css";
var VBtnToggleSymbol = Symbol.for("vuetify:v-btn-toggle");
var makeVBtnToggleProps = propsFactory({
  ...makeVBtnGroupProps(),
  ...makeGroupProps()
}, "VBtnToggle");
var VBtnToggle = genericComponent()({
  name: "VBtnToggle",
  props: makeVBtnToggleProps(),
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      isSelected,
      next,
      prev,
      select,
      selected
    } = useGroup(props, VBtnToggleSymbol);
    useRender(() => {
      const btnGroupProps = VBtnGroup.filterProps(props);
      return createVNode(VBtnGroup, mergeProps({
        "class": ["v-btn-toggle", props.class]
      }, btnGroupProps, {
        "style": props.style
      }), {
        default: () => {
          var _a;
          return [(_a = slots.default) == null ? void 0 : _a.call(slots, {
            isSelected,
            next,
            prev,
            select,
            selected
          })];
        }
      });
    });
    return {
      next,
      prev,
      select
    };
  }
});

export {
  VBtnToggleSymbol
};
//# sourceMappingURL=chunk-273ZY35A.js.map
